# Render configuration for both backend and frontend

services:
  # Backend service (Django)
  - type: web
    name: backend
    env: python
    plan: free
    buildCommand: |-
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py migrate
      python manage.py collectstatic --noinput
    startCommand: gunicorn core.wsgi:application
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: DJANGO_SETTINGS_MODULE
        value: core.settings_prod
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: 'False'
      - key: DISABLE_COLLECTSTATIC
        value: 1
      - key: DATABASE_URL
        fromDatabase:
          name: social-db
          property: connectionString
      - key: CORS_ALLOWED_ORIGINS
        value: 'https://frontend.onrender.com,http://localhost:3000'
      - key: CSRF_TRUSTED_ORIGINS
        value: 'https://backend.onrender.com,https://frontend.onrender.com'
      - key: ALLOWED_HOSTS
        value: 'backend.onrender.com,localhost,127.0.0.1'
    numInstances: 1
    regions: [sao]
    healthCheckPath: /admin/

  # Frontend service (React)
  - type: web
    name: frontend
    env: node
    plan: free
    buildCommand: |-
      cd frontend
      npm install
      npm run build
    startCommand: serve -s build -l $PORT
    staticPublishPath: ./frontend/build
    envVars:
      - key: NODE_VERSION
        value: 18.16.0
      - key: NODE_ENV
        value: production
      - key: VITE_API_URL
        value: https://backend.onrender.com
      - key: CI
        value: 'false'
      - key: HOST
        value: '0.0.0.0'
      - key: PORT
        value: '10000'
    routes:
      - type: rewrite
        source: /api/*
        destination: https://backend.onrender.com/$1
      - type: rewrite
        source: '/*'
        destination: /index.html
    numInstances: 1
    regions: [sao]

# Database
databases:
  - name: social-db
    plan: free
    region: sao
