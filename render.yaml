# Render configuration for both backend and frontend

# Backend service (Django)
services:
  - type: web
    name: social-backend
    env: python
    buildCommand: |-
      pip install -r requirements.txt
      python manage.py migrate
      python manage.py collectstatic --noinput
    startCommand: gunicorn core.wsgi:application
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: DJANGO_SETTINGS_MODULE
        value: core.settings
      - key: SECRET_KEY
        generateValue: true
      - key: WEB_CONCURRENCY
        value: 4
      - key: DEBUG
        value: false
      - key: DISABLE_COLLECTSTATIC
        value: 1
      - key: DATABASE_URL
        fromDatabase:
          name: social-db
          property: connectionString
      - key: CORS_ALLOWED_ORIGINS
        sync: false
      - key: CSRF_TRUSTED_ORIGINS
        sync: false
    plan: free
    numInstances: 1
    regions: [sao]
    healthCheckPath: /admin/

  # Frontend service (React)
  - type: web
    name: social-frontend
    env: node
    buildCommand: |-
      cd frontend
      npm install
      npm run build
    staticPublishPath: ./frontend/dist
    envVars:
      - key: NODE_VERSION
        value: 18.x
      - key: VITE_API_URL
        sync: false
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    plan: free
    numInstances: 1
    regions: [sao]

# PostgreSQL database
databases:
  - name: social-db
    databaseName: social
    user: social_user
    plan: free
    regions: [sao]
